<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.bs.spring" />
	
	<!-- 스프링에서 활용할 POJO클래스는 bean으로 등록해서 사용한다. -->
	<!-- p라는 이름으로 Person을 기본생성해 -->
	<beans:bean id="p" class="com.bs.spring.model.vo.Person"/>
	<!-- 
		생성과 동시에 특정한값을 설정하기
		1. 매개변수있는 생성자 이용
		2. setter를 이용
	 -->
	 <!-- 매개변수 있는 생성자 이용하기 -->
	<beans:bean id="p1" class="com.bs.spring.model.vo.Person">
		<beans:constructor-arg index="0" value="유병승"/>
		<beans:constructor-arg index="1" value="19"/>
		<beans:constructor-arg index="2" value="180.5"/>
		<beans:constructor-arg index="3" ref="phone"/>
	</beans:bean>
	<!-- setter를 이용해서 값을 대입 -->
	<beans:bean id="p2" class="com.bs.spring.model.vo.Person">
		<beans:property name="name" value="박세현"/>
		<beans:property name="age" value="29"/>
	</beans:bean>
	
	<!-- springbean을 생성하거나 소멸시킬때 실행할 메소드 지정하기 -->
	 <beans:bean id="p3" class="com.bs.spring.model.vo.Person"
	 init-method="inforPerson" destroy-method="inforPerson">
		<beans:property name="name" value="오윤재"/>
		<beans:property name="age" value="23"/>
	</beans:bean>
	
	<!-- 등록된 bean에 다른 bean을 참조하기 -->
	<!-- <beans:bean id="p4" class="com.bs.spring.model.vo.Person"
	init-method="inforPerson">
		<beans:property name="name" value="한호현"/>
		<beans:property name="phone" ref="phone"/>
	</beans:bean> -->
	
	<beans:bean id="phone" class="com.bs.spring.model.vo.Phone">
		<beans:property name="model" value="갤럭시"/>
		<beans:property name="number" value="01012341234"/>
	</beans:bean>
	
	<beans:bean id="loincheckInterceptor" 
		class="com.bs.spring.common.interceptor.LoginCheckInterceptor"/>
		
	<!-- 인터셉터등록하기 -->
	<!-- <interceptors> -->
<!-- 		<interceptor>
			<mapping path="/member/*"/>
			<beans:bean class="com.bs.spring.common.interceptor.LoggerInterceptor"/>
		</interceptor> -->
		<!-- 로그인체크 인터셉터 -->
		<!-- <interceptor>
			<mapping path="/demo/*"/>
			<exclude-mapping path="/demo/demo.do"/>
			<beans:ref bean="loincheckInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/board/*"/>
			<beans:ref bean="loincheckInterceptor"/>
		</interceptor> -->
		
	<!-- </interceptors> -->
	
	<!-- 파일 업로드처리할 resolver를 등록하기 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="104857600"/>	
	</beans:bean>
	
	
	<!-- jackson bind등록하기 -->
	<beans:bean id="jacksonbinder"
	class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonbinder"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
	<!-- websockethandler등록하기 -->
	<beans:bean id="chattingserver" 
		class="com.bs.spring.chatting.ChattingServer"/>
	
	<websocket:handlers>
		<websocket:mapping handler="chattingserver" path="/chatting"/>
		<websocket:handshake-interceptors>
			<beans:bean 
			class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	
	
	
	
	
</beans:beans>
